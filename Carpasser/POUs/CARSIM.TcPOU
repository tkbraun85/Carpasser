<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="CARSIM" Id="{6351b867-5755-4318-9827-0ba11a6c53ee}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CARSIM
VAR_INPUT
	valvePosition : REAL := 0;
	//init : BOOL := FALSE;
	carWt: REAL := 1000;

	scanTime: REAL := 0.02; //milliseconds
	carRollResist : REAL := 0.001; // lbs per ton
END_VAR
VAR_IN_OUT
	init : BOOL;
END_VAR
VAR_OUTPUT
	car : CarPasser;
	incOut : BOOL := FALSE;
END_VAR
VAR
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF init THEN
	car.vel := 0;
	car.acc := 0;
	car.pos := 0;
	car.accelLoad := 0;
	
	car.velPrev := 0;
	car.accPrev := 0;	
	car.posPrev :=0;
	car.accelLoadPrev:= 0;
	car.carWeight := carWt;
	car.valveFlowEst := 0;
	init:=0;
END_IF


car.velPrev := car.vel;
car.accPrev := car.acc;	
car.posPrev := car.pos;
car.accelLoadPrev := car.accelLoad;

IF ABS(valvePosition) > 0.1 THEN
	car.valveFlowEst := 0.0319*EXPT(ABS(valvePosition), 2.0) - 0.1504*ABS(valvePosition) +5.04; // liters/minute
ELSE
	car.valveFlowEst := 0;	
END_IF

//flow negate flow for opposite movement
IF valvePosition < 0 THEN
	car.valveFlowEst := -car.valveFlowEst;
END_IF

car.vel :=  0.0084*car.valveFlowEst;

IF car.vel > 0.025 THEN
	car.acc := MIN(2.5,ABS(car.vel - car.velPrev)/0.050);	
ELSE
	car.acc := 0;
END_IF


//car.acc := (car.vel - car.velPrev)/0.050;
car.pos := car.posPrev + car.vel*0.05; 
car.accelLoad := carRollResist*car.carWeight/2000 + car.carWeight/32.2*car.acc;
car.power := car.accelLoad*60/33000;	


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>